@page "/exportexcel"
@attribute [Authorize(Roles = "Administrator")]
@rendermode InteractiveServer
@using ClosedXML.Excel
@using Microsoft.EntityFrameworkCore
@using CoShop.Data
@inject IDbContextFactory<CoShop.Data.ApplicationDbContext> DbFactory
@implements IAsyncDisposable

@inject IJSRuntime js

<h2>Экспорт таблиц в Excel</h2>

<button type="button" class="btn btn-success mb-2" @onclick="@ExportXLSAppointment">Экспорт</button>

@code {
    ApplicationDbContext context = default!;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
    }


    public async Task ExportXLSAppointment()
    {
        var XLSStream = ExportXLSRezult();

        await js.InvokeVoidAsync("BlazorDownloadFile", "Курсы.xlsx", XLSStream);
    }

    private byte[] ExportXLSRezult()
    {
        using var workbook = new XLWorkbook();

        var worksheet1 = workbook.Worksheets.Add("Категории");
        worksheet1.Cell(1, 1).Value = "Id Категории";
        worksheet1.Cell(1, 2).Value = "Категория";

        worksheet1.Row(1).Style.Font.Bold = true;

        int i = 2;

        foreach (var rez in context.Cats)
        {
            worksheet1.Cell(i, 1).Value = rez.Id;
            worksheet1.Cell(i, 2).Value = rez.Name;
            i++;
        }

        var worksheet2 = workbook.Worksheets.Add("Курсы");
        worksheet2.Cell(1, 1).Value = "Id Курса";
        worksheet2.Cell(1, 2).Value = "Название";
        worksheet2.Cell(1, 3).Value = "Описание";
        worksheet2.Cell(1, 4).Value = "Цена";
        worksheet2.Cell(1, 5).Value = "Дата создания";
        worksheet2.Cell(1, 6).Value = "Id Категории";
        worksheet2.Cell(1, 7).Value = "Путь к изображению";

        worksheet2.Row(1).Style.Font.Bold = true;

        i = 2;

        foreach (var rez in context.Courses)
        {
            worksheet2.Cell(i, 1).Value = rez.Id;
            worksheet2.Cell(i, 2).Value = rez.Title;
            worksheet2.Cell(i, 3).Value = rez.Description;
            worksheet2.Cell(i, 4).Value = rez.Price;
            worksheet2.Cell(i, 5).Value = rez.CreatedAt;
            worksheet2.Cell(i, 6).Value = rez.CatId;
            worksheet2.Cell(i, 7).Value = rez.ImageUrl;
            i++;
        }

        var worksheet3 = workbook.Worksheets.Add("Уроки");
        worksheet3.Cell(1, 1).Value = "Id Урока";
        worksheet3.Cell(1, 2).Value = "Название";
        worksheet3.Cell(1, 3).Value = "Содержимое";
        worksheet3.Cell(1, 4).Value = "Id Курса";
        worksheet3.Cell(1, 5).Value = "Длительность";

        worksheet3.Row(1).Style.Font.Bold = true;

        i = 2;

        foreach (var rez in context.Lessons)
        {
            worksheet3.Cell(i, 1).Value = rez.Id;
            worksheet3.Cell(i, 2).Value = rez.Title;
            worksheet3.Cell(i, 3).Value = rez.Content;
            worksheet3.Cell(i, 4).Value = rez.CourseId;
            worksheet3.Cell(i, 5).Value = rez.Duration;
            i++;
        }

        var worksheet4 = workbook.Worksheets.Add("Заказы");
        worksheet4.Cell(1, 1).Value = "Id Заказа";
        worksheet4.Cell(1, 2).Value = "Id Пользователя";
        worksheet4.Cell(1, 3).Value = "Id Курса";
        worksheet4.Cell(1, 4).Value = "Дата оформления";

        worksheet4.Row(1).Style.Font.Bold = true;

        i = 2;

        foreach (var rez in context.Orders)
        {
            worksheet4.Cell(i, 1).Value = rez.Id;
            worksheet4.Cell(i, 2).Value = rez.ApplicationUserId;
            worksheet4.Cell(i, 3).Value = rez.CourseId;
            worksheet4.Cell(i, 4).Value = rez.OrderDate;
            i++;
        }

        var worksheet5 = workbook.Worksheets.Add("Отзывы");
        worksheet5.Cell(1, 1).Value = "Id Отзыва";
        worksheet5.Cell(1, 2).Value = "Id Курса";
        worksheet5.Cell(1, 3).Value = "Id Пользователя";
        worksheet5.Cell(1, 4).Value = "Оценка";
        worksheet5.Cell(1, 5).Value = "Комментарий";
        worksheet5.Cell(1, 6).Value = "Дата создания";

        worksheet5.Row(1).Style.Font.Bold = true;

        i = 2;

        foreach (var rez in context.Reviews)
        {
            worksheet5.Cell(i, 1).Value = rez.Id;
            worksheet5.Cell(i, 2).Value = rez.CourseId;
            worksheet5.Cell(i, 3).Value = rez.ApplicationUserId;
            worksheet5.Cell(i, 4).Value = rez.Rating;
            worksheet5.Cell(i, 5).Value = rez.Comment;
            worksheet5.Cell(i, 6).Value = rez.CreatedAt;
            i++;
        }

        MemoryStream XLSStream = new();
        workbook.SaveAs(XLSStream);

        return XLSStream.ToArray();

    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
