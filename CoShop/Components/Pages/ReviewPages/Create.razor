@page "/reviews/create"
@using Microsoft.EntityFrameworkCore
@using CoShop.Models
@inject IDbContextFactory<CoShop.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Review</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Review" OnValidSubmit="AddReview" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="courseid" class="form-label">CourseId:</label> 
                <InputNumber id="courseid" @bind-Value="Review.CourseId" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Review.CourseId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="applicationuserid" class="form-label">ApplicationUserId:</label>
                <InputNumber id="applicationuserid" @bind-Value="Review.ApplicationUserId" class="form-control" aria-required="true" />
                <ValidationMessage For="() => Review.ApplicationUserId" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="rating" class="form-label">Rating:</label> 
                <InputNumber id="rating" @bind-Value="Review.Rating" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Review.Rating" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="comment" class="form-label">Comment:</label> 
                <InputText id="comment" @bind-Value="Review.Comment" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Review.Comment" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdat" class="form-label">CreatedAt:</label> 
                <InputDate id="createdat" @bind-Value="Review.CreatedAt" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Review.CreatedAt" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/reviews">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Review Review { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddReview()
    {
        using var context = DbFactory.CreateDbContext();
        context.Reviews.Add(Review);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/reviews");
    }
}
