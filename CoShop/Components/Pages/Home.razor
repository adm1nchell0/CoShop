@page "/"
@using Microsoft.EntityFrameworkCore
@using CoShop.Models
@using CoShop.Data
@implements IAsyncDisposable
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<PageTitle>Главная</PageTitle>

<h2>Главная</h2>

<div class="container">
    <div class="row">
        @if (categories == null || !categories.Any())
        {
            <p>Нет доступных категорий.</p>
        }
        else
        {
            foreach (var category in categories)
            {
                <div class="col-md-12 mb-4">
                    <div class="card border-0">
                        <div class="card-header border-0 bg-transparent">
                            <h5 class="mb-0">@category.Name</h5>
                        </div>
                        <div class="card-body p-0">
                            @if (category.Courses != null && category.Courses.Any())
                            {
                                <div class="row">
                                    @foreach (var course in category.Courses)
                                    {
                                        <div class="col-md-4 mb-3">
                                            <div class="card custom-card-height border-0 border-radius-custom" style="background-image: url('/images/@course.ImageUrl'); background-size: cover; background-position: center;">
                                                <div class="card-body bg-overlay d-flex flex-column justify-content-between">
                                                    <div>
                                                        <h6 class="card-title">@course.Title</h6>
                                                        <p class="card-text">@course.Description</p>
                                                    </div>
                                                    <div class="d-flex justify-content-between align-items-end">
                                                        <p class="card-text mb-0">@course.Price р.</p>
                                                        <NavLink class="btn btn-primary btn-radius-custom custom-btn ml-auto" href="">Подробнее</NavLink>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="m-3">Нет доступных курсов в этой категории.</p>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<style>
    .border-radius-custom {
        border-radius: 15px !important;
    }

    .btn-radius-custom {
        border-radius: 15px !important;
    }

    .bg-transparent {
        background-color: transparent !important;
    }

    .bg-overlay {
        background: rgba(0, 0, 0, 0.25); /* Полупрозрачный черный фон для текста */
        color: white !important;
        border-radius: 15px;
        height: 100%; /* Увеличение высоты карточки */
    }

    .custom-btn {
        background-color: rgba(0, 0, 0, 0.25) !important;
        border: none !important; /* Убираем стандартную границу кнопки */
        color: white !important; /* Цвет текста кнопки */
    }

        .custom-btn:hover {
            background-color: rgba(0, 0, 0, 0.5) !important; /* Изменение фона при наведении */
        }

    .custom-card-height {
        height: 180px; /* Увеличение высоты карточки */
    }

    .d-flex {
        display: flex;
    }

    .flex-column {
        flex-direction: column;
    }

    .justify-content-between {
        justify-content: space-between;
    }

    .align-items-end {
        align-items: flex-end;
    }

    .mb-0 {
        margin-bottom: 0 !important;
    }

    .ml-auto {
        margin-left: auto !important;
    }
</style>

@code {
    private ApplicationDbContext context = default!;
    private List<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        categories = await context.Categorys.Include(c => c.Courses).ToListAsync();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
